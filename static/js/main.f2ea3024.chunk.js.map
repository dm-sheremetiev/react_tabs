{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","changeSelectedTab","className","map","tab","classNames","id","href","onClick","currentTab","targetTab","find","undefined","onTabSelected","title","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,kBAUA,OACE,qBAAK,UAAQ,gBAAb,SACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,oBAEEF,UAAWG,IACT,CAAE,YAAaD,EAAIE,KAAON,IAE5B,UAAQ,MALV,SAOE,mBACEO,KAAI,WAAMH,EAAIE,IACd,UAAQ,UACRE,QAAS,kBACPR,IAAkBI,EAAIE,IAxBhB,SAACG,GACrB,IAAMC,EAAYX,EAAKY,MAAK,SAAAP,GAAG,OAAIA,IAAQK,UAEzBG,IAAdF,GACFT,EAAkBS,GAoBsBG,CAAcT,IAJ9C,SAOGA,EAAIU,SAbFV,EAAIE,cCrBVP,EAAO,CAClB,CAAEO,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASlB,EAAK,IAApD,mBAAOmB,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKjB,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBgB,EAAYJ,SAGlC,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAekB,EAAYZ,GAC3BL,kBAAmBkB,IAGrB,qBAAKjB,UAAU,QAAQ,UAAQ,aAA/B,SACGgB,EAAYH,cC1BrBK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f2ea3024.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport Tab from '../../types/tabs';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  changeSelectedTab: React.Dispatch<React.SetStateAction<Tab>>;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  changeSelectedTab,\n}) => {\n  const onTabSelected = (currentTab: Tab) => {\n    const targetTab = tabs.find(tab => tab === currentTab);\n\n    if (targetTab !== undefined) {\n      changeSelectedTab(targetTab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={classNames(\n                { 'is-active': tab.id === selectedTabId },\n              )}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => (\n                  selectedTabId !== tab.id && onTabSelected(tab)\n                )}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        changeSelectedTab={setSelectedTab}\n      />\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}