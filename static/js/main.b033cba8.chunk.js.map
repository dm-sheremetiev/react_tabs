{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTab","changeSelectedTab","selectedTabId","id","selectedTabContent","content","className","map","tab","classNames","href","onClick","currentTab","targetTab","find","undefined","onTabSelected","title","App","useState","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,YACAC,EACI,EADJA,kBAGMC,EAEFF,EAFFG,GACSC,EACPJ,EADFK,QAWF,OACE,qCACE,qBAAK,UAAQ,gBAAb,SACE,qBAAKC,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAC,GAAG,OACX,oBAEEF,UAAWG,IACT,CAAE,YAAaD,EAAIL,KAAOD,IAE5B,UAAQ,MALV,SAOE,mBACEQ,KAAI,WAAMF,EAAIL,IACd,UAAQ,UACRQ,QAAS,WACHX,IAAgBQ,GAzBhB,SAACI,GACrB,IAAMC,EAAYd,EAAKe,MAAK,SAAAN,GAAG,OAAIA,IAAQI,UAEzBG,IAAdF,GACFZ,EAAkBY,GAsBFG,CAAcR,IALpB,SASGA,EAAIS,SAfFT,EAAIL,aAuBnB,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SACGF,QCnDIL,EAAO,CAClB,CAAEI,GAAI,QAASc,MAAO,QAASZ,QAAS,eACxC,CAAEF,GAAI,QAASc,MAAO,QAASZ,QAAS,eACxC,CAAEF,GAAI,QAASc,MAAO,QAASZ,QAAS,gBAG7Ba,EAAgB,WAC3B,MAAyCC,mBAASpB,EAAK,IAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKK,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBN,EAAYiB,SAGlC,cAAC,EAAD,CACElB,KAAMA,EACNC,YAAaA,EACbC,kBAAmBA,QCtB3BmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b033cba8.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport Tab from '../../types/tabs';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTab: Tab;\n  changeSelectedTab: React.Dispatch<React.SetStateAction<Tab>>;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTab,\n  changeSelectedTab,\n}) => {\n  const {\n    id: selectedTabId,\n    content: selectedTabContent,\n  } = selectedTab;\n\n  const onTabSelected = (currentTab: Tab) => {\n    const targetTab = tabs.find(tab => tab === currentTab);\n\n    if (targetTab !== undefined) {\n      changeSelectedTab(targetTab);\n    }\n  };\n\n  return (\n    <>\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => (\n              <li\n                key={tab.id}\n                className={classNames(\n                  { 'is-active': tab.id === selectedTabId },\n                )}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (selectedTab !== tab) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTabContent}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, changeSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTab={selectedTab}\n        changeSelectedTab={changeSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}